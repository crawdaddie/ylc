let fact = fn (int n) int {
    match n
    | 0 -> 1 
    | 1 -> 1
    | _ -> n * fact(n - 1)
}

let g = fact(45)


type Triple = (int, int, int)

let fact = fn (Triple t) int {
    match n
    | (_, _, x) -> x
    | 1 -> 1
    | _ -> n * fact(n - 1)
}

